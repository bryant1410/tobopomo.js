// Generated by CoffeeScript 1.10.0
(function() {
  var layout, normalise, root, tsi;

  tsi = require("./data/tsi.json");

  root = typeof global !== "undefined" && global !== null ? global : this;

  layout = {
    "31": "\n",
    "33": "!",
    "34": "\"",
    "35": "#",
    "36": "$",
    "37": "%",
    "38": "&",
    "39": "'",
    "40": "(",
    "41": ")",
    "42": "*",
    "43": "+",
    "44": "ㄝ",
    "45": "ㄦ",
    "46": "ㄡ",
    "47": "ㄥ",
    "48": "ㄢ",
    "49": "ㄅ",
    "50": "ㄉ",
    "51": "ˇ",
    "52": "ˋ",
    "53": "ㄓ",
    "54": "ˊ",
    "55": "˙",
    "56": "ㄚ",
    "57": "ㄞ",
    "58": ":",
    "59": "ㄤ",
    "60": "<",
    "61": "=",
    "62": ">",
    "63": "?",
    "64": "@",
    "91": "[",
    "92": "\\",
    "93": "]",
    "94": "^",
    "95": "_",
    "96": "`",
    "97": "ㄇ",
    "98": "ㄖ",
    "99": "ㄏ",
    "100": "ㄎ",
    "101": "ㄍ",
    "102": "ㄑ",
    "103": "ㄕ",
    "104": "ㄘ",
    "105": "ㄛ",
    "106": "ㄨ",
    "107": "ㄜ",
    "108": "ㄠ",
    "109": "ㄩ",
    "110": "ㄙ",
    "111": "ㄟ",
    "112": "ㄣ",
    "113": "ㄆ",
    "114": "ㄐ",
    "115": "ㄋ",
    "116": "ㄔ",
    "117": "ㄧ",
    "118": "ㄒ",
    "119": "ㄊ",
    "120": "ㄌ",
    "121": "ㄗ",
    "122": "ㄈ",
    "123": "{",
    "124": "|",
    "125": "}",
    "126": "~"
  };

  normalise = function(string) {
    return string.replace(/ /g, '');
  };

  root.word_seperater = function(string) {
    var i, index, j, len, output, splitted_string, temp, total, traversed;
    string = normalise(string);
    output = [];
    total = 0;
    traversed = 0;
    temp = "";
    splitted_string = string.split(/["ˊ"|"ˇ"|"ˋ"|"˙"]/);
    for (index = j = 0, len = splitted_string.length; j < len; index = ++j) {
      i = splitted_string[index];
      total = total + i.length;
      if (index === 0) {
        if (tsi[i + string[i.length]] === void 0 || tsi[i + string[i.length]][0].length > 1) {
          console.log(i);
        } else if (tsi[i + string[index + i.length]][0].length === 1) {
          output.push(i + string[index + i.length]);
        }
      } else if (string[index + total] === void 0) {
        console.log(i);
      } else {
        console.log(i + string[index + total]);
        if (tsi[i + string[index + total]] === void 0 || tsi[i + string[index + total]][0].length > 1) {
          console.log(i);
        } else if (tsi[i + string[index + total]][0].length === 1) {
          output.push(i + string[index + total]);
        }
      }
    }
    return console.log(output);
  };

  root.tobopomo = function(string) {
    var i, j, output, ref;
    string = normalise(string);
    output = [];
    for (i = j = 0, ref = string.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      if (layout[(string[i].charCodeAt(0)).toString()]) {
        output.push(layout[(string[i].charCodeAt(0)).toString()]);
      } else {
        output.push(string[i]);
      }
    }
    return output.join("");
  };

  root.tokanji = function(string) {
    string = normalise(string);
    return tsi[string];
  };

  String.prototype.tobopomo = function() {
    return tobopomo(this);
  };

  String.prototype.tokanji = function() {
    return tokanji(this);
  };

}).call(this);
